import os
import logging
import requests
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackContext, MessageHandler, Filters, CallbackQueryHandler

ETHERSCAN_API_KEY = os.getenv("ETHERSCAN_API_KEY")
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —á–µ—Ä–µ–∑ DeBank (–∏–ª–∏ –º–æ–∫, –µ—Å–ª–∏ API –æ–≥—Ä–∞–Ω–∏—á–µ–Ω)
def get_wallet_summary(address):
    try:
        # –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞ –∫ DeBank (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
        debank_url = f"https://openapi.debank.com/v1/user/total_balance?id={address}"
        r = requests.get(debank_url)
        data = r.json()
        total_usd = data.get("total_usd_value", 0)

        # –≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å —Å –¥—Ä—É–≥–∏—Ö endpoints –∏–ª–∏ –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ
        # –ó–¥–µ—Å—å –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–º–µ—Ä—ã ‚Äî –∑–∞–≥–ª—É—à–∫–∏
        summary = {
            "–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å": "$288,661",
            "–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π": "$43K (0.41%)",
            "–ù–µ—Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π": "-$13,060.6 (-0.13%)",
            "–í–Ω–µ—à–Ω–∏–π": "$246K",
            "Win Rate": "86.99%",
            "–ü–æ–±–µ–¥": "2,407",
            "–ü—Ä–æ–∏–≥—Ä—ã—à–µ–π": "360",
            "–û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤": "$34M",
            "–¢–æ—Ä–≥–æ–≤": "661,315",
            "–°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä —Å–¥–µ–ª–∫–∏": "51,642",
            "Total Value (–ø–æ DeBank)": f"${total_usd:,.2f}"
        }

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
        msg = (
            f"üìä <b>–°–≤–æ–¥–∫–∞ –ø–æ –∫–æ—à–µ–ª—å–∫—É</b>"
            f"
<b>–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å:</b> {summary['–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å']}"
            f"
‚îú –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π: {summary['–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π']}"
            f"
‚îú –ù–µ—Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π: {summary['–ù–µ—Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π']}"
            f"
‚îî –í–Ω–µ—à–Ω–∏–π: {summary['–í–Ω–µ—à–Ω–∏–π']}"
            f"

<b>Win Rate:</b> {summary['Win Rate']}"
            f"
‚îú –ü–æ–±–µ–¥: {summary['–ü–æ–±–µ–¥']}"
            f"
‚îî –ü–æ—Ä–∞–∂–µ–Ω–∏–π: {summary['–ü—Ä–æ–∏–≥—Ä—ã—à–µ–π']}"
            f"

<b>–û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤:</b> {summary['–û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤']}"
            f"
‚îú –ö–æ–ª-–≤–æ —Ç–æ—Ä–≥–æ–≤: {summary['–¢–æ—Ä–≥–æ–≤']}"
            f"
‚îî –°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä: {summary['–°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä —Å–¥–µ–ª–∫–∏']}"
            f"

üì¶ <b>–ü–æ –¥–∞–Ω–Ω—ã–º DeBank:</b> {summary['Total Value (–ø–æ DeBank)']}"
        )

        return msg
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤–æ–¥–∫–∏: {e}")
        return "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤–æ–¥–∫–∏."

def start(update: Update, context: CallbackContext) -> None:
    keyboard = [[InlineKeyboardButton("üìä –°–≤–æ–¥–∫–∞ –ø–æ –∫–æ—à–µ–ª—å–∫—É", callback_data='summary')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–¥–∫—É –ø–æ –∫–æ—à–µ–ª—å–∫—É:", reply_markup=reply_markup)

def button_callback(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    query.answer()
    query.message.reply_text("üì© –í–≤–µ–¥–∏ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ –¥–ª—è —Å–≤–æ–¥–∫–∏:")

def handle_wallet(update: Update, context: CallbackContext) -> None:
    address = update.message.text.strip()
    update.message.reply_text("üîç –ü–æ–ª—É—á–∞—é —Å–≤–æ–¥–∫—É...")

    summary = get_wallet_summary(address)
    MAX_LENGTH = 4000
    for i in range(0, len(summary), MAX_LENGTH):
        update.message.reply_text(summary[i:i+MAX_LENGTH], parse_mode="HTML")

def main():
    updater = Updater(TELEGRAM_BOT_TOKEN)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CallbackQueryHandler(button_callback))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_wallet))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
